import telebot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton
from database import add_course, remove_course, get_courses, add_admin, get_admins

TOKEN = '6743641196:AAHeR0_dDYD8fAXbe5mCS6_Zgqf6l4Cp-QM'
ADMIN_CHAT_ID = -1002177188908  # ID –≥—Ä—É–ø–ø—ã, –∫—É–¥–∞ –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –∑–∞—è–≤–∫–∏

bot = telebot.TeleBot(TOKEN)

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫—É—Ä—Å–æ–≤ –∏ –∞–¥–º–∏–Ω–æ–≤ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
courses = get_courses()
ADMIN_USER_IDS = get_admins()
# –•—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö
user_data = {}

# –•—Ä–∞–Ω–µ–Ω–∏–µ ID —Å–æ–æ–±—â–µ–Ω–∏–π —Å –≤—ã–±–æ—Ä–æ–º –∫—É—Ä—Å–∞
course_message_ids = {}


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def start(message):
    markup = InlineKeyboardMarkup()
    markup.row_width = 1
    markup.add(
        InlineKeyboardButton("–†—É—Å—Å–∫–∏–π —è–∑—ã–∫ üá∑üá∫", callback_data='ru'),
        InlineKeyboardButton("O'zbek tili üá∫üáø", callback_data='uz'),
        InlineKeyboardButton("English üá¨üáß", callback_data='en')
    )
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / Tilni tanlang / Select language:", reply_markup=markup)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ Inline –∫–Ω–æ–ø–∫–∏
@bot.callback_query_handler(func=lambda call: True)
def callback_query(call):
    if call.data in ['ru', 'uz', 'en']:
        language = call.data
        user_data[call.from_user.id] = {'language': language}

        # –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –≤—ã–±–æ—Ä–æ–º —è–∑—ã–∫–∞
        bot.delete_message(call.message.chat.id, call.message.message_id)

        if language == 'ru':
            bot.send_message(call.message.chat.id, "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ –ø–æ–ª–Ω–æ–µ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é.")
        elif language == 'uz':
            bot.send_message(call.message.chat.id, "Assalomu alaykum! To‚Äòliq ismingiz va familiyangizni yozing.")
        elif language == 'en':
            bot.send_message(call.message.chat.id, "Hello! Please enter your full name.")

        bot.register_next_step_handler(call.message, get_full_name)

    elif call.data in courses:
        select_course(call)

    elif call.data.startswith('remove_'):
        course = call.data.replace('remove_', '')
        if course in courses:
            remove_course(course)  # –£–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
            courses.remove(course)  # –£–¥–∞–ª–µ–Ω–∏–µ –∏–∑ —Å–ø–∏—Å–∫–∞
            bot.send_message(call.message.chat.id, f"–ö—É—Ä—Å '{course}' –±—ã–ª —É–¥–∞–ª–µ–Ω.")
        else:
            bot.send_message(call.message.chat.id, "–¢–∞–∫–æ–≥–æ –∫—É—Ä—Å–∞ –Ω–µ—Ç.")


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª–Ω–æ–≥–æ –∏–º–µ–Ω–∏
def get_full_name(message):
    user_data[message.from_user.id]['name'] = message.text

    language = user_data[message.from_user.id]['language']
    if language == 'ru':
        msg = "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à –∫–æ–Ω—Ç–∞–∫—Ç."
    elif language == 'uz':
        msg = "Kontakt raqamingizni yuboring."
    elif language == 'en':
        msg = "Please send your contact."

    contact_button = KeyboardButton(text=msg, request_contact=True)
    contact_markup = ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
    contact_markup.add(contact_button)

    bot.send_message(message.chat.id, msg, reply_markup=contact_markup)
    bot.register_next_step_handler(message, get_contact)


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–∞
def get_contact(message):
    user_id = message.from_user.id
    if message.contact:
        phone_number = message.contact.phone_number
        user_data[user_id]['contact'] = phone_number

        language = user_data[user_id]['language']
        if language == 'ru':
            msg = "–í—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏."
        elif language == 'uz':
            msg = "Ro'yxatdan o'tish uchun kursni tanlang."
        elif language == 'en':
            msg = "Please select a course for registration."

        markup = InlineKeyboardMarkup()
        if not courses:
            bot.send_message(message.chat.id, "–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫—É—Ä—Å–æ–≤.")
            return

        for course in courses:
            markup.add(InlineKeyboardButton(course, callback_data=course))

        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –≤—ã–±–æ—Ä–æ–º –∫—É—Ä—Å–∞ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –µ–≥–æ ID
        course_message = bot.send_message(message.chat.id, msg, reply_markup=markup)
        course_message_ids[message.chat.id] = course_message.message_id

    else:
        bot.send_message(user_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à –∫–æ–Ω—Ç–∞–∫—Ç —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É.")
        contact_button = KeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç", request_contact=True)
        contact_markup = ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
        contact_markup.add(contact_button)
        bot.send_message(user_id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É –≤ –º–µ–Ω—é", reply_markup=contact_markup)
        bot.register_next_step_handler(message, get_contact)


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫—É—Ä—Å–∞ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–∫–∏ –≤ –≥—Ä—É–ø–ø—É
def select_course(call):
    course = call.data
    user_data[call.from_user.id]['course'] = course

    user_info = user_data[call.from_user.id]
    language = user_info['language']
    name = user_info['name']
    contact = user_info['contact']
    tg_user_name = call.from_user.username  # –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram

    # –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ –≥—Ä—É–ø–ø—É
    msg_to_group = (f"–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞\n"
                    f"–ò–º—è: {name}\n"
                    f"–ù–æ–º–µ—Ä: {contact}\n"
                    f"tg_user_name: @{tg_user_name}\n"
                    f"–ö—É—Ä—Å: {course}")

    bot.send_message(ADMIN_CHAT_ID, msg_to_group)

    # –°–æ–æ–±—â–µ–Ω–∏–µ —Å –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    if language == 'ru':
        thank_you_msg = f"{name}, —Å–ø–∞—Å–∏–±–æ –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –Ω–∞ –∫—É—Ä—Å ! –ú—ã —Å–∫–æ—Ä–æ —Å –≤–∞–º–∏ —Å–≤—è–∂–µ–º—Å—è."
    elif language == 'uz':
        thank_you_msg = f"{name}, ro'yxatdan o'tganingiz uchun rahmat! Tez orada siz bilan bog'lanamiz."
    elif language == 'en':
        thank_you_msg = f"{name}, thank you for registering! We will contact you soon."

    bot.send_message(call.message.chat.id, thank_you_msg)

    # –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –≤—ã–±–æ—Ä–æ–º –∫—É—Ä—Å–∞
    if call.message.chat.id in course_message_ids:
        bot.delete_message(call.message.chat.id, course_message_ids[call.message.chat.id])


# –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏ —É–¥–∞–ª–µ–Ω–∏—è –∫—É—Ä—Å–æ–≤
@bot.message_handler(commands=['admin'])
def admin_panel(message):
    if str(message.from_user.id) in ADMIN_USER_IDS:
        markup = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        markup.add(
            KeyboardButton("–î–æ–±–∞–≤–∏—Ç—å –∫—É—Ä—Å"),
            KeyboardButton("–£–¥–∞–ª–∏—Ç—å –∫—É—Ä—Å"),
            KeyboardButton("–î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∞")
        )
        bot.send_message(message.chat.id, "–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å:", reply_markup=markup)
    else:
        bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(content_types=['text'])
def handle_text(message):
    if str(message.from_user.id) in ADMIN_USER_IDS:
        if message.text == "–î–æ–±–∞–≤–∏—Ç—å –∫—É—Ä—Å":
            bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫—É—Ä—Å–∞.")
            bot.register_next_step_handler(message, add_course_handler)
        elif message.text == "–£–¥–∞–ª–∏—Ç—å –∫—É—Ä—Å":
            markup = InlineKeyboardMarkup()
            for course in courses:
                markup.add(InlineKeyboardButton(course, callback_data=f'remove_{course}'))
            bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.", reply_markup=markup)
        elif message.text == "–î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∞":
            bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ ID –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
            bot.register_next_step_handler(message, add_admin_handler)


def add_course_handler(message):
    course_name = message.text
    add_course(course_name)  # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫—É—Ä—Å–∞ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    courses.append(course_name)  # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫—É—Ä—Å–∞ –≤ —Å–ø–∏—Å–æ–∫
    bot.send_message(message.chat.id, f"–ö—É—Ä—Å '{course_name}' –¥–æ–±–∞–≤–ª–µ–Ω.")


def add_admin_handler(message):
    admin_id = message.text
    add_admin(admin_id)  # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    ADMIN_USER_IDS.append(admin_id)  # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤ —Å–ø–∏—Å–æ–∫
    bot.send_message(message.chat.id, f"–ê–¥–º–∏–Ω —Å ID {admin_id} –¥–æ–±–∞–≤–ª–µ–Ω.")


bot.polling(none_stop=True)
